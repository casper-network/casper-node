---
# Quick checks to make before spending time on test and package.clone:
# on failure -> failed-pre-checks pipeline
# on success --> cargo-test (parallel) ---> [ test-package-success | test-package-failure ]
#            \-> package  (parallel) ----/
kind: pipeline
type: docker
name: pre-checks

# Steps perform as fast serially, due to file thrashing.
steps:
  - name: cargo-fmt
    image: casperlabs/node-build-u1804
    commands:
      - rustup component add rustfmt
      - cargo fmt --all -- --check

  - name: cargo-clippy
    image: casperlabs/node-build-u1804
    environment:
      RUSTFLAGS: '-D warnings'
    commands:
      - make setup-rs
      - rustup component add clippy
      - cargo clippy --all-targets --all-features --workspace

  - name: cargo-audit
    image: casperlabs/node-build-u1804
    commands:
      - cargo install cargo-audit
      - cargo generate-lockfile
      - cargo audit --ignore RUSTSEC-2021-0073 --ignore RUSTSEC-2021-0076

trigger:
  branch:
    - master
    - trying
    - staging
    - dev
    - "release-*"
    - "feat-*"
  event:
    exclude:
      - tag

---
# Failure state from pre-checks pipeline
kind: pipeline
type: docker
name: failed-pre-checks

clone:
  disable: true

steps:
  - name: notify
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      template:
        - |
          casper-node build status: *{{ uppercasefirst build.status }}*
          Author: {{ build.author }}
          Drone Build: <{{ build.link }}|#{{ build.number }}>
          Commit Link: <https://github.com/{{repo.owner}}/{{repo.name}}/commit/{{build.commit}}|{{ truncate build.commit 10 }}>
trigger:
  status:
    - failure
  branch:
    - master
    - trying
    - staging
    - dev
    - "release-*"
    - "feat-*"
  event:
    exclude:
      - tag

depends_on:
  - pre-checks

---
# Testing pipeline, runs in parallel with package pipeline
kind: pipeline
type: docker
name: cargo-test

steps:
- name: updater-dry-run
  image: casperlabs/node-build-u1804
  commands:
  - cargo run --package=casper-updater -- --root-dir=. --dry-run

- name: cargo-test
  image: casperlabs/node-build-u1804
  commands:
  - make setup
  - make test CARGO_FLAGS=--release
  - make test-contracts CARGO_FLAGS=--release

- name: client-ffi-tests-and-examples
  image: casperlabs/node-build-u1804
  commands:
  - make setup-rs
  - cmake -Hclient/examples/ffi -Btarget/build -DCMAKE_BUILD_TYPE=Debug
  - cmake --build target/build
  - ./target/build/ffi-tests
  - ./target/build/get-auction-info
  - ./target/build/put-deploy

depends_on:
  - pre-checks

trigger:
  branch:
    - master
    - trying
    - staging
    - dev
    - "release-*"
    - "feat-*"
  event:
    exclude:
      - tag

---
# Packaging pipeline, runs in parallel with cargo-test pipeline
kind: pipeline
type: docker
name: package

steps:
- name: build-deb-update-revision
  image: casperlabs/node-build-u1804
  commands:
    - "./update-rev.sh"

- name: build-deb
  image: casperlabs/node-build-u1804
  commands:
    - make setup-rs
    - "make deb"

- name: test-deb
  image: ubuntu:bionic
  commands:
    - "apt update"
    - "$(pwd)/ci/test_deb_install.sh $(pwd) casper-client"

- name: put-drone-s3-cache
  image: plugins/s3-sync:latest
  settings:
    bucket:
      from_secret: put-drone-s3-bucket
    access_key:
      from_secret: put-drone-aws-ak
    secret_key:
      from_secret: put-drone-aws-sk
    region: us-east-2
    source: target/debian/
    target: "/drone_temp/${DRONE_BUILD_NUMBER}_${DRONE_REPO_OWNER}_${DRONE_REPO_NAME}/debian/"
  when:
    branch:
      - master
      - dev
      - "release-*"
      - "feat-*"
    event:
      - push

- name: build-wasm-package-push-to-s3
  image: casperlabs/s3cmd-build:latest
  commands:
    - "./build_wasm_package.sh"
  environment:
    CL_VAULT_TOKEN:
      from_secret: vault_token
    CL_VAULT_HOST:
      from_secret: vault_host
  when:
    branch:
    - master
    - dev
    - "release-*"
    - "feat-*"
    event:
    - push

- name: build-upgrade-package
  image: casperlabs/node-build-u1804
  commands:
    - "./ci/build_update_package.sh"

- name: dry-run-publish
  image: casperlabs/node-build-u1804
  commands:
    - "cd types && cargo publish --dry-run"

- name: upload-to-s3-genesis
  image: plugins/s3
  settings:
    bucket: 'genesis.casperlabs.io'
    region: 'us-east-2'
    access_key:
      from_secret: drone_genesis_key_id
    secret_key:
      from_secret: drone_genesis_secret
    source: "target/upgrade_build/**/*"
    strip_prefix: 'target/upgrade_build/'
    target: "/drone/${DRONE_COMMIT}/"
  when:
    branch:
      - master
      - dev
      - "release-*"
      - "feat-*"
    event:
      - push

- name: s3-genesis-rel-pr
  image: plugins/s3
  settings:
    bucket: 'genesis.casperlabs.io'
    region: 'us-east-2'
    access_key:
      from_secret: drone_genesis_key_id
    secret_key:
      from_secret: drone_genesis_secret
    source: "target/upgrade_build/**/*"
    strip_prefix: 'target/upgrade_build/'
    target: "/drone/${DRONE_COMMIT}/"
  when:
    branch:
      - "release-*"
    event:
      - pull_request

- name: nctl-upgrade-assets-stage-rc
  image: casperlabs/node-build-u1804
  commands:
    - "./ci/nctl_upgrade_stage.sh"
  volumes:
  - name: nctl-temp-dir
    path: /tmp/nctl_upgrade_stage
  when:
    branch:
      - "release-*"
    event:
      - push

- name: nctl-bucket-upload-rc
  image: plugins/s3-sync:latest
  settings:
    bucket: 'nctl.casperlabs.io'
    access_key:
      from_secret: put-drone-aws-ak
    secret_key:
      from_secret: put-drone-aws-sk
    region: us-east-2
    source: '../../tmp/nctl_upgrade_stage/'
    target: "/${DRONE_BRANCH}/"
  volumes:
  - name: nctl-temp-dir
    path: /tmp/nctl_upgrade_stage
  when:
    branch:
      - "release-*"
    event:
      - push

- name: nctl-upgrade-test
  image: casperlabs/node-build-u1804
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: put-drone-aws-ak
    AWS_SECRET_ACCESS_KEY:
      from_secret: put-drone-aws-sk
  commands:
    - "python3 -m pip install supervisor toml"
    - "apt update && apt install lsof -y"
    - "bash -i ./ci/nctl_upgrade.sh"
  when:
    branch:
      - trying
      - staging

depends_on:
  - pre-checks

trigger:
  branch:
    - master
    - trying
    - staging
    - dev
    - "release-*"
    - "feat-*"
  event:
    exclude:
      - tag

volumes:
- name: nctl-temp-dir
  temp: {}

---
# Run on success of cargo-test and package pipelines.
kind: pipeline
type: docker
name: test-package-success

steps:
  # Retrieving packages built and put in s3 from package pipeline.
- name: get-and-del-drone-s3-cache
  image: casperlabs/s3cmd-build:latest
  commands:
    - s3cmd sync "s3://$AWS_BUCKET/drone_temp/${DRONE_BUILD_NUMBER}_${DRONE_REPO_OWNER}_${DRONE_REPO_NAME}/debian/" "./target/debian/"
    - s3cmd del --recursive "s3://$AWS_BUCKET/drone_temp/${DRONE_BUILD_NUMBER}_${DRONE_REPO_OWNER}_${DRONE_REPO_NAME}/"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: put-drone-aws-ak
    AWS_SECRET_ACCESS_KEY:
      from_secret: put-drone-aws-sk
    AWS_DEFAULT_REGION: "us-east-2"
    AWS_BUCKET:
      from_secret: put-drone-s3-bucket
  when:
    branch:
      - master
      - dev
      - "release-*"
      - "feat-*"
    event:
      - push

- name: publish-repo-test
  image: casperlabs/aptly:latest
  failure: ignore
  environment:
    AWS_SECRET_ACCESS_KEY:
      from_secret: APTLY_SECRET_KEY
    AWS_ACCESS_KEY_ID:
      from_secret: APTLY_KEY_ID
  settings:
    repo_name:
      from_secret: APTLY_REPO_NAME
    region:
      from_secret: APTLY_REGION
    gpg_key:
      from_secret: APTLY_GPG_KEY
    gpg_pass:
      from_secret: APTLY_GPG_PASS
    distribution_id:
      from_secret: APTLY_DISTRIBUTION_ID
    acl: 'public-read'
    prefix: 'releases'
    deb_path: './target/debian'
    deb_name: '*.deb'
  when:
    branch:
      - master
      - dev
      - "release-*"
      - "feat-*"
    event:
      - push

depends_on:
  - cargo-test
  - package

trigger:
  branch:
    - master
    - trying
    - staging
    - dev
    - "release-*"
    - "feat-*"
  event:
    exclude:
      - tag

---
# Runs on failure of cargo-test or package pipelines.
kind: pipeline
type: docker
name: test-package-failure

clone:
  disable: true

steps:
- name: del-s3-cache
  image: casperlabs/s3cmd-build:latest
  commands:
    - s3cmd del --recursive "s3://$AWS_BUCKET/drone_temp/${DRONE_BUILD_NUMBER}_${DRONE_REPO_OWNER}_${DRONE_REPO_NAME}/"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: put-drone-aws-ak
    AWS_SECRET_ACCESS_KEY:
      from_secret: put-drone-aws-sk
    AWS_DEFAULT_REGION: "us-east-2"
    AWS_BUCKET:
      from_secret: put-drone-s3-bucket
  when:
    branch:
      - master
      - dev
      - "release-*"
      - "feat-*"
    event:
      - push

# Build failed so remove the update_package candidate
#- name: del-upgrade_package-s3
#  image: casperlabs/s3cmd-build:latest
#  commands:
#    - ./ci/upgrade_package_s3_storage.sh del
#  environment:
#    CL_VAULT_TOKEN:
#      from_secret: vault_token
#    CL_VAULT_HOST:
#      from_secret: vault_host
#  when:
#    branch:
#      - master
#      - "release-*"
#    event:
#      - push

- name: notify
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_webhook
    template:
      - |
        casper-node build status: *{{ uppercasefirst build.status }}*
        Author: {{ build.author }}
        Drone Build: <{{ build.link }}|#{{ build.number }}>
        Commit Link: <https://github.com/{{repo.owner}}/{{repo.name}}/commit/{{build.commit}}|{{ truncate build.commit 10 }}>

trigger:
  status:
    - failure
  branch:
    - master
    - trying
    - staging
    - dev
    - "release-*"
    - "feat-*"
  event:
    exclude:
      - tag

depends_on:
  - cargo-test
  - package

# TAGGING PIPELINES
# release-by-tag
#      | (failure)
# failed-tag
---
# act on release - when the tag is created
kind: pipeline
type: docker
name: release-by-tag

steps:
- name: build-deb
  image: casperlabs/node-build-u1804
  commands:
    - "make deb"

- name: publish-repo-prod
  image: casperlabs/aptly:latest
  failure: ignore
  environment:
    AWS_SECRET_ACCESS_KEY:
      from_secret: aptly_prod_secret_key
    AWS_ACCESS_KEY_ID:
      from_secret: aptly_prod_key_id
  settings:
    repo_name:
      from_secret: aptly_prod_repo
    region:
      from_secret: aptly_prod_region
    gpg_key:
      from_secret: aptly_prod_gpg_key
    gpg_pass:
      from_secret: aptly_prod_gpg_pass
    distribution_id:
      from_secret: aptly_prod_dist_id
    acl: 'public-read'
    prefix: 'releases'
    deb_path: './target/debian'
    deb_name: '*.deb'

- name: build-upgrade-package
  image: casperlabs/node-build-u1804
  commands:
    - "./ci/build_update_package.sh"

- name: publish-github-pre-release
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    checksum:
    - sha256
    - md5
    files:
    - "./target/debian/*.deb"
    - "./target/upgrade_build/*.gz"
    prerelease:
    - true
  when:
    ref:
    - refs/tags/v*

- name: publish-crate
  image: casperlabs/node-build-u1804
  commands:
    - "./ci/publish_to_crates_io.sh"
  environment:
    CARGO_TOKEN:
      from_secret: crates_io_token

- name: as-contract-publish
  image: plugins/npm
  settings:
    username:
      from_secret: npm_user
    token:
      from_secret: npm_token
    email:
      from_secret: npm_email
    folder:
    - "smart_contracts/contract_as"
    fail_on_version_conflict:
    - true
    access:
    - "public"

- name: nctl-upgrade-assets-stage
  image: casperlabs/node-build-u1804
  commands:
    - "./ci/nctl_upgrade_stage.sh"
  volumes:
  - name: nctl-temp-dir
    path: /tmp/nctl_upgrade_stage

- name: nctl-bucket-upload
  image: plugins/s3-sync:latest
  settings:
    bucket: 'nctl.casperlabs.io'
    access_key:
      from_secret: put-drone-aws-ak
    secret_key:
      from_secret: put-drone-aws-sk
    region: us-east-2
    source: '../../tmp/nctl_upgrade_stage/'
    target: "/${DRONE_TAG}/"
  volumes:
  - name: nctl-temp-dir
    path: /tmp/nctl_upgrade_stage

- name: update-default-branch
  image: casperlabs/node-build-u1804
  environment:
    GITHUB_TOKEN:
      from_secret: github_token_def_branch
  commands:
    - "./ci/change_default_branch.py"

volumes:
- name: nctl-temp-dir
  temp: {}

trigger:
  ref:
  - refs/tags/v*

---
kind: pipeline
type: docker
name: failed-tag

clone:
  disable: true

steps:
- name: notify
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_webhook
    template:
    - |
      casper-node build status: *{{ uppercasefirst build.status }}*
      Author: {{ build.author }}
      Drone Build: <{{ build.link }}|#{{ build.number }}>
      Commit Link: <https://github.com/{{repo.owner}}/{{repo.name}}/commit/{{build.commit}}|{{ truncate build.commit 10 }}>
trigger:
  status:
  - failure
  ref:
    - refs/tags/v*

depends_on:
- release-by-tag

---
kind: pipeline
type: docker
name: nightly-tests-cron

steps:
- name: nctl-nighly-script
  image: casperlabs/node-build-u1804
  commands:
  - "python3 -m pip install supervisor toml"
  - "apt update && apt install lsof -y"
  - "bash -i ci/nightly-test.sh"

- name: notify
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_webhook_nightly
    template:
    - |
      Nightly Test Run Status: *{{ uppercasefirst build.status }}*
      Author: {{ build.author }}
      Drone Build: <{{ build.link }}|#{{ build.number }}>
      Commit Link: <https://github.com/{{repo.owner}}/{{repo.name}}/commit/{{build.commit}}|{{ truncate build.commit 10 }}>
  when:
    status:
    - failure
    - success
  depends_on:
  - nctl-nighly-script

trigger:
  cron: [ nightly-tests-cron ]
