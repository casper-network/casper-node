---
kind: pipeline
type: docker
name: cargo-test

environment:
  RUSTC_WRAPPER: '/root/.cargo/bin/cachepot'
  CACHEPOT_BUCKET: 'drone-sccache'
  CACHEPOT_S3_KEY_PREFIX: ci
  CACHEPOT_REGION: 'us-east-2'
  CARGO_INCREMENTAL: '0'

__buildenv: &buildenv
  image: casperlabs/node-build-u1804
  volumes:
  - name: rustup
    path: "/root/.rustup"
  - name: cargo
    path: "/root/.cargo"
  - name: drone
    path: "/drone"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: cachepot_aws_ak
    AWS_SECRET_ACCESS_KEY:
      from_secret: cachepot_aws_sk

steps:
- name: setup
  <<: *buildenv
  commands:
  - make setup

# The below is duplicated for pull and push
# due to environment bug with caching.
- name: cargo-test-pr
  <<: *buildenv
  environment:
    SCCACHE_S3_PUBLIC: true
  commands:
  - make test CARGO_FLAGS=--release
  - make test-contracts CARGO_FLAGS=--release
  - cachepot --show-stats
  when:
    event:
    - pull_request

- name: cargo-test-push
  <<: *buildenv
  commands:
  - make test CARGO_FLAGS=--release
  - make test-contracts CARGO_FLAGS=--release
  - cachepot --show-stats
  when:
    event:
    - push

- name: notify
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_webhook
    template:
    - |
      Cargo-Test Pipeline Status: *{{ uppercasefirst build.status }}*
      Drone Build: <{{ build.link }}|#{{ build.number }}>
      Commit Link: <https://github.com/{{repo.owner}}/{{repo.name}}/commit/{{build.commit}}|{{ truncate build.commit 10 }}>
  when:
    event:
    - push
    status:
    - failure
    branch:
    - dev
    - "release-*"
    - "feat-*"

volumes:
- name: rustup
  temp: {}
- name: cargo
  temp: {}
- name: drone
  temp: {}

trigger:
  branch:
  - trying
  - staging
  - dev
  - "release-*"
  - "feat-*"
  event:
    include:
    - pull_request
    - push
    exclude:
    - tag
    - cron

---
kind: pipeline
type: docker
name: nctl-testing

environment:
  RUSTC_WRAPPER: '/root/.cargo/bin/cachepot'
  CACHEPOT_BUCKET: 'drone-sccache'
  CACHEPOT_S3_KEY_PREFIX: ci
  CACHEPOT_REGION: 'us-east-2'
  CARGO_INCREMENTAL: '0'

__buildenv: &buildenv
  image: casperlabs/node-build-u1804
  volumes:
  - name: rustup
    path: "/root/.rustup"
  - name: cargo
    path: "/root/.cargo"
  - name: drone
    path: "/drone"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: cachepot_aws_ak
    AWS_SECRET_ACCESS_KEY:
      from_secret: cachepot_aws_sk

steps:
- name: setup
  <<: *buildenv
  commands:
  - make setup
  # `elfx86exts` is used to determine the CPU features used by the compiled node binary.
  - cargo install elfx86exts --version 0.5.0

- name: nctl-compile
  <<: *buildenv
  commands:
  - bash -c ./ci/nctl_compile.sh

- name: nctl-upgrade-test
  <<: *buildenv
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: put-drone-aws-ak
    AWS_SECRET_ACCESS_KEY:
      from_secret: put-drone-aws-sk
  commands:
  - bash -c ./ci/nctl_upgrade.sh

- name: check CPU features
  <<: *buildenv
  commands:
  - bash -i ./ci/check_cpu_features.sh

volumes:
- name: rustup
  temp: {}
- name: cargo
  temp: {}
- name: drone
  temp: {}

trigger:
  branch:
  - trying
  - staging
  event:
    include:
    - push
    exclude:
    - pull_request
    - tag
    - cron

---
kind: pipeline
type: docker
name: package

__buildenv: &buildenv
  image: casperlabs/node-build-u1804
  volumes:
  - name: rustup
    path: "/root/.rustup"
  - name: cargo
    path: "/root/.cargo"
  - name: drone
    path: "/drone"
  - name: nctl-temp-dir
    path: "/tmp/nctl_upgrade_stage"

__buildenv_upload: &buildenv_upload
  image: casperlabs/node-build-u1804
  volumes:
  - name: rustup
    path: "/root/.rustup"
  - name: cargo
    path: "/root/.cargo"
  - name: drone
    path: "/drone"
  - name: nctl-temp-dir
    path: "/tmp/nctl_upgrade_stage"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: put-drone-aws-ak
    AWS_SECRET_ACCESS_KEY:
      from_secret: put-drone-aws-sk

steps:
- name: setup
  <<: *buildenv
  commands:
  - make setup

- name: build-client-contracts
  <<: *buildenv
  commands:
  - make build-client-contracts

- name: stest-wasm-package-push-to-s3
  image: casperlabs/s3cmd-build:latest
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: put-drone-aws-ak
    AWS_SECRET_ACCESS_KEY:
      from_secret: put-drone-aws-sk
  commands:
  - "./build_wasm_package.sh"

- name: build-upgrade-package
  <<: *buildenv
  commands:
  - "./ci/build_update_package.sh"

- name: upload-to-s3-genesis
  image: plugins/s3
  settings:
    bucket: 'genesis.casperlabs.io'
    region: 'us-east-2'
    access_key:
      from_secret: drone_genesis_key_id
    secret_key:
      from_secret: drone_genesis_secret
    source: "target/upgrade_build/**/*"
    strip_prefix: 'target/upgrade_build/'
    target: "/drone/${DRONE_COMMIT}/"

- name: nctl-s3-build
  <<: *buildenv_upload
  commands:
  - "aws s3 rm s3://nctl.casperlabs.io/${DRONE_BRANCH} --recursive"
  - "./ci/nctl_upgrade_stage.sh"
  when:
    branch:
    - dev
    - "release-*"

- name: nctl-bucket-upload
  image: plugins/s3-sync:latest
  settings:
    bucket: 'nctl.casperlabs.io'
    access_key:
      from_secret: put-drone-aws-ak
    secret_key:
      from_secret: put-drone-aws-sk
    region: us-east-2
    source: '../../tmp/nctl_upgrade_stage/'
    target: "/${DRONE_BRANCH}/"
  volumes:
  - name: nctl-temp-dir
    path: /tmp/nctl_upgrade_stage
  when:
    branch:
    - dev
    - "release-*"

- name: notify
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_webhook
    template:
    - |
      Package Pipeline Status: *{{ uppercasefirst build.status }}*
      Drone Build: <{{ build.link }}|#{{ build.number }}>
      Commit Link: <https://github.com/{{repo.owner}}/{{repo.name}}/commit/{{build.commit}}|{{ truncate build.commit 10 }}>
  when:
    status:
    - failure

volumes:
- name: rustup
  temp: {}
- name: cargo
  temp: {}
- name: drone
  temp: {}
- name: nctl-temp-dir
  temp: {}

trigger:
  branch:
  - dev
  - "release-*"
  - "feat-*"
  event:
    include:
    - push
    exclude:
    - pull_request
    - tag
    - cron

---
kind: pipeline
type: docker
name: release-by-tag

__buildenv: &buildenv
  image: casperlabs/node-build-u1804
  volumes:
  - name: rustup
    path: "/root/.rustup"
  - name: cargo
    path: "/root/.cargo"
  - name: drone
    path: "/drone"
  - name: nctl-temp-dir
    path: "/tmp/nctl_upgrade_stage"

__buildenv_upload: &buildenv_upload
  image: casperlabs/node-build-u1804
  volumes:
  - name: rustup
    path: "/root/.rustup"
  - name: cargo
    path: "/root/.cargo"
  - name: drone
    path: "/drone"
  - name: nctl-temp-dir
    path: "/tmp/nctl_upgrade_stage"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: put-drone-aws-ak
    AWS_SECRET_ACCESS_KEY:
      from_secret: put-drone-aws-sk

steps:
- name: setup
  <<: *buildenv
  commands:
  - make setup

- name: build-upgrade-package
  <<: *buildenv
  commands:
  - "./ci/build_update_package.sh"

- name: publish-github-pre-release
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    checksum:
    - sha256
    - md5
    files:
    - "./target/upgrade_build/*/bin.tar.gz"
    prerelease:
    - true

- name: nctl-s3-build
  <<: *buildenv_upload
  commands:
  - "aws s3 rm s3://nctl.casperlabs.io/${DRONE_TAG} --recursive"
  - "./ci/nctl_upgrade_stage.sh"

- name: nctl-bucket-upload
  image: plugins/s3-sync:latest
  settings:
    bucket: 'nctl.casperlabs.io'
    access_key:
      from_secret: put-drone-aws-ak
    secret_key:
      from_secret: put-drone-aws-sk
    region: us-east-2
    source: '../../tmp/nctl_upgrade_stage/'
    target: "/${DRONE_TAG}/"
  volumes:
  - name: nctl-temp-dir
    path: /tmp/nctl_upgrade_stage

- name: publish-crates
  <<: *buildenv
  environment:
    CARGO_TOKEN:
      from_secret: crates_io_token
  commands:
  - "./ci/publish_to_crates_io.sh"

- name: as-contract-publish
  image: plugins/npm
  settings:
    username:
      from_secret: npm_user
    token:
      from_secret: npm_token
    email:
      from_secret: npm_email
    folder:
      - "smart_contracts/contract_as"
    fail_on_version_conflict:
      - true
    access:
      - "public"

- name: notify
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_webhook
    template:
    - |
      Casper-Node Release Status: *{{ uppercasefirst build.status }}*
      Drone Build: <{{ build.link }}|#{{ build.number }}>
      Commit Link: <https://github.com/{{repo.owner}}/{{repo.name}}/commit/{{build.commit}}|{{ truncate build.commit 10 }}>
  when:
    status:
    - failure
    - success

volumes:
- name: rustup
  temp: {}
- name: cargo
  temp: {}
- name: drone
  temp: {}
- name: nctl-temp-dir
  temp: {}

trigger:
  ref:
  - refs/tags/v*

---
kind: pipeline
type: docker
name: nightly-testing

environment:
  RUSTC_WRAPPER: '/root/.cargo/bin/cachepot'
  CACHEPOT_BUCKET: 'drone-sccache'
  CACHEPOT_S3_KEY_PREFIX: ci
  CACHEPOT_REGION: 'us-east-2'
  CARGO_INCREMENTAL: '0'

__buildenv: &buildenv
  image: casperlabs/node-build-u1804
  volumes:
  - name: rustup
    path: "/root/.rustup"
  - name: cargo
    path: "/root/.cargo"
  - name: drone
    path: "/drone"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: cachepot_aws_ak
    AWS_SECRET_ACCESS_KEY:
      from_secret: cachepot_aws_sk

steps:
- name: setup
  <<: *buildenv
  commands:
  - make setup

- name: nctl-compile
  <<: *buildenv
  commands:
  - bash -c ./ci/nctl_compile.sh

- name: nctl-nightly-tests
  <<: *buildenv
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: put-drone-aws-ak
    AWS_SECRET_ACCESS_KEY:
      from_secret: put-drone-aws-sk
  commands:
  - bash -c ./ci/nightly-test.sh

- name: notify
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_webhook_nightly
    template:
    - |
      Nightly Test Run Status: *{{ uppercasefirst build.status }}*
      Author: {{ build.author }}
      Drone Build: <{{ build.link }}|#{{ build.number }}>
      Commit Link: <https://github.com/{{repo.owner}}/{{repo.name}}/commit/{{build.commit}}|{{ truncate build.commit 10 }}>
  when:
    status:
    - failure
    - success

volumes:
- name: rustup
  temp: {}
- name: cargo
  temp: {}
- name: drone
  temp: {}

trigger:
  cron: [ nightly-tests-cron ]
